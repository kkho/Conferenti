name: Test Suite

on:
  push:
    branches: [main]
    paths:
      - "conferenti-web/**"
  pull_request:
    types: [ready_for_review, opened, reopened, synchronize]
    branches: [main]
    paths:
      - "conferenti-web/**"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "conferenti-web/package-lock.json"

      - name: Install dependencies
        run: npm ci
        working-directory: ./conferenti-web

      - name: Run linter
        run: npm run lint
        working-directory: ./conferenti-web

      - name: Run type check
        run: npm run type-check
        working-directory: ./conferenti-web
        continue-on-error: true # Since you have ignoreBuildErrors: true

      - name: Run tests
        run: npm run test:ci
        working-directory: ./conferenti-web
        env:
          CI: true
          NODE_ENV: test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            conferenti-web/test-results/
            conferenti-web/coverage/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.node-version == '20.x'
        with:
          file: ./conferenti-web/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: "conferenti-web/package-lock.json"

      - name: Install dependencies
        run: npm ci
        working-directory: ./conferenti-web

      - name: Build application
        run: npm run build
        working-directory: ./conferenti-web
        env:
          CI: true
