name: Conferenti Api - Test and Deploy Pipeline

on:
  pull_request:
    types: [ready_for_review, opened, reopened, synchronize]
    branches: [main]
    paths:
      - "conferenti-api/**"
      - ".github/workflows/api-test-build-deploy.yaml"
  push:
    branches: [main]
    paths:
      - "conferenti-api/**"
      - ".github/workflows/api-test-build-deploy.yaml"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  setup-dotnet:
    name: Setup .NET
    runs-on: ubuntu-latest
    outputs:
      dotnet-version: ${{ steps.setup-dotnet.outputs.dotnet-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - name: Setup .NET 9.x
        id: setup-dotnet
        uses: kkho/workflows/setup-dotnet@main
        with:
          dotnet-version: "9.x"
          solution-path: "./conferenti-api/Conferenti.Api.sln"
  unit-tests:
    needs: setup-dotnet
    name: Unit test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      issues: read
      pull-requests: write
    steps:
      - uses: kkho/workflows/unittest@main
        with:
          checkout: true
          collect-coverage: true
          dotnet-version: "9.x"
          working-directory: "."
          solution-path: "./conferenti-api/Conferenti.Api.sln"
          test-projects: "./conferenti-api/test/**/*Tests*.csproj"

  integration-test-dev:
    needs: [setup-dotnet, unit-tests]
    name: Integration test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      issues: read
      pull-requests: write
    steps:
      - uses: kkho/workflows/integrationtest@main
        with:
          checkout: true
          solution-path: "./conferenti-api/Conferenti.Api.sln"
          system_name: "conferenti"
          test-projects: "./conferenti-api/test/**/*Integration.csproj"
          environment: "dev"

  build-dev:
    name: Build image for conferenti-api-dev
    needs: [integration-test-dev]
    uses: kkho/workflows/.github/workflows/build-push-backend.yaml@main
    with:
      app_name: conferenti-api
      system_name: conferenti
      environment: development
      dockerfile: ./conferenti-api/Dockerfile
      docker-build-context: ./conferenti-api
      push-image: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
      tags: |
        ${{ vars.CONTAINER_REGISTRY }}/${{ github.actor }}/conferenti/conferenti-api-development:${{ github.run_number }}
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  notify-failed-integrationtest:
    needs: [integration-test-dev]
    if: ${{ always() }}
    uses: kkho/workflows/.github/workflows/slack-message.yaml@main
    with:
      channel: "#build-dev"
      message: |
        Test results: ${{ needs.integration-test-dev.result }}
        Status: ${{ needs.integration-test-dev.result == 'success' && '✅ Success' || '❌ Failed' }}
        Repository: ${{ github.repository }}
        Commit: ${{ github.sha }}
        Url: [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
      color: ${{ needs.integration-test-dev.result == 'success' && 'good' || 'danger' }}
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
